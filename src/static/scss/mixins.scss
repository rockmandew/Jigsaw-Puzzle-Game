/* --mixins */

/* use to generate font sizes based off the default font size of 16px */
/* pass the size in px/pt to return a rem e.g. .fontcalculate(21) would return a font size of 1.3125rem */
@mixin fontcalculate($px) {
	font-size:($px / 16) * 100%; //fallback for older browsers, creates a percentage value, may cause nesting issues
	$sizeval:$px / 16;
	font-size:"#{$sizeval}rem";
}

/* calculate line height based on px values from photoshop */
/* pass the fontsize and required line height in px, e.g. .lineheight(21,35) would give a line height of 166.667%, with a font size of 21px gives an actual line height of 35px */
@mixin lineheight($fontsize,$lineheight) {
	line-height:$lineheight / ($fontsize / 100%);
}

/* fixed aspect ratio elements, pass 100% to produce a square */
@mixin aspect($height) {
	position: relative;
	padding-bottom: $height;
	height: 0;
	.inner {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

/* http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/ */
@mixin vertalign() {
	position: relative;
	top: 50%;
	@include transform( translateY(-50%) );
}

/* make an element invisible to sighted users but still visible to screen readers */
/* http://webaim.org/techniques/css/invisiblecontent/ */
.invisible,
.totallyinvisible {
	position:absolute;
	left:-100000px;
	width:1px;
	height:1px;
	overflow:hidden;
	outline:0;
}
.invisible {
	&:focus {
		position:static;
		width:auto;
		height:auto;
	}
}

/* usage: .blur(5px) */
@mixin blur($value) {
	-webkit-filter: blur($value);
	-moz-filter: blur($value);
	-o-filter: blur($value);
	-ms-filter: blur($value);
	filter: blur($value);
}

/* border radius */
@mixin border-radius($radius: 0.3em) {
	-webkit-border-radius: $radius;
	-moz-border-radius   : $radius;
	border-radius        : $radius;
}

/* shadow */
/* usage: .box-shadow( "0 1px 0 red, 0 -1px 0 green" ); or, for modern versions of Less, .box-shadow( 0 1px 0 red, 0 -1px 0 green; ); */
@mixin box-shadow( $shadow ) {
	-webkit-box-shadow: $shadow;
	box-shadow        : $shadow;
}

/* usage: .transition( "transition, another transition" ); */
@mixin transition( $trans ) {
	transition: $trans;
	-moz-transition: $trans;
	-webkit-transition: $trans;
	-o-transition: $trans;
}

@mixin transparency( $trans ) {
	$mstrans: $trans * 100;
	filter: alpha(opacity=$mstrans);
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="$mstrans")"; /* IE 8 */
	-moz-opacity: $trans; /* Netscape */
	-khtml-opacity: $trans; /* Safari 1.x */
	opacity: $trans; /* Good browsers */
}

/* --box sizing */
@mixin border-box() {
	-moz-box-sizing   : border-box;
	-webkit-box-sizing: border-box;
	-ms-box-sizing    : border-box;
	box-sizing        : border-box;
}
@mixin content-box() {
	-moz-box-sizing   : content-box;
	-webkit-box-sizing: content-box;
	-ms-box-sizing    : content-box;
	box-sizing        : content-box;
	*behavior         : none;
}

@mixin no-highlight() {
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	-webkit-tap-highlight-color: transparent; /* For some Androids */
}

@mixin no-select() {
	-webkit-user-select: none;
	-moz-user-select: none;
	-khtml-user-select: none;
	-o-user-select: none;
	user-select: none;
}

/* flexbox vendor prefixes */
@mixin flex() {
	display: -webkit-box;
	display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}

@mixin flex-direction($direction) {
	-moz-box-direction: $direction;
	-webkit-box-direction: $direction;
	-webkit-flex-direction: $direction;
	-ms-flexbox-direction: $direction;
	-ms-flex-direction: $direction;
	flex-direction: $direction;
}

@mixin flex-wrap() {
	-moz-box-wrap: wrap;
	-webkit-box-wrap: wrap;
	-webkit-flex-wrap: wrap;
	-ms-flexbox-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}

@mixin flex-nowrap() {
	-ms-flex-align: center;
	-ms-flex-pack: center;
	-ms-box-orient:horizontal;
	-moz-box-wrap: nowrap;
	-webkit-box-wrap: nowrap;
	-webkit-flex-wrap: nowrap;
	-ms-flexbox-wrap: nowrap;
	-ms-flex-wrap: nowrap;
	flex-wrap: nowrap;
}

@mixin flex-grow() {
	-webkit-flex: 1 0 0;
	-ms-flex: 1 0 100%;
	flex: 1 0 0;
}

@mixin justify-content($position) {
	-webkit-box-pack: $position;
	-webkit-justify-content: $position;
	justify-content: $position;
}

@mixin align-content($content) {
	-webkit-box-align-content: $content;
	-webkit-align-content: $content;
	-ms-flex-align-content: $content;
	align-content: $content;
}

@mixin align-items($items) {
	-webkit-box-align: $items;
	-webkit-align-items: $items;
	-moz-box-align: $items;
	-ms-flex-align: $items;
	align-items: $items;
}

@mixin align-self($self) {
	display: table-cell;
	-webkit-align-self: $self; /* Safari 7.0+ */
	align-self: $self;
}
